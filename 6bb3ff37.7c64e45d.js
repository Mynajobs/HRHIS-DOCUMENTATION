(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{77:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return s})),n.d(a,"metadata",(function(){return o})),n.d(a,"toc",(function(){return l})),n.d(a,"default",(function(){return b}));var t=n(3),r=n(7),i=(n(0),n(93)),s={id:"reports",title:"Reports",sidebar_label:"Reports"},o={unversionedId:"developers/data/reports",id:"developers/data/reports",isDocsHomePage:!1,title:"Reports",description:"SQL views",source:"@site/docs/developers/data/reports.md",slug:"/developers/data/reports",permalink:"/hris-api-docs/docs/developers/data/reports",editUrl:"https://github.com/hisptz/hris-api-docs/blob/main/docs/developers/data/reports.md",version:"current",sidebar_label:"Reports",sidebar:"menuSidebar",previous:{title:"dashboards",permalink:"/hris-api-docs/docs/developers/data/dashboards"},next:{title:"Datastore",permalink:"/hris-api-docs/docs/developers/data/datastore"}},l=[{value:"SQL views",id:"sql-views",children:[{value:"Criteria",id:"criteria",children:[]},{value:"Variables",id:"variables",children:[]},{value:"Filtering",id:"filtering",children:[]}]},{value:"Dashboard",id:"dashboard",children:[{value:"Browsing dashboards",id:"browsing-dashboards",children:[]},{value:"Searching dashboards",id:"searching-dashboards",children:[]},{value:"Creating, updating and removing dashboards",id:"creating-updating-and-removing-dashboards",children:[]},{value:"Adding, moving and removing dashboard items and content",id:"adding-moving-and-removing-dashboard-items-and-content",children:[]}]},{value:"Visualization",id:"visualization",children:[{value:"Retrieving visualizations",id:"retrieving-visualizations",children:[]},{value:"Creating, updating and removing visualizations",id:"creating-updating-and-removing-visualizations",children:[]}]}],d={toc:l};function b(e){var a=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},d,n,{components:a,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"sql-views"},"SQL views"),Object(i.b)("p",null,"The SQL views resource allows you to create and retrieve the result set\nof SQL views. The SQL views can be executed directly against the\ndatabase and render the result set through the Web API resource."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/sqlViews\n")),Object(i.b)("p",null,"SQL views are useful for creating data views which may be more easily\nconstructed with SQL compared combining the multiple objects of the Web\nAPI. As an example, lets assume we have been asked to provide a view of\nall organization units with their names, parent names, organization unit\nlevel and name, and the coordinates listed in the database. The view\nmight look something like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sql"},"SELECT ou.name as orgunit, par.name as parent, ou.coordinates, ous.level, oul.name from organisationunit ou\nINNER JOIN _orgunitstructure ous ON ou.organisationunitid = ous.organisationunitid\nINNER JOIN organisationunit par ON ou.parentid = par.organisationunitid\nINNER JOIN orgunitlevel oul ON ous.level = oul.level\nWHERE ou.coordinates is not null\nORDER BY oul.level, par.name, ou.name\n")),Object(i.b)("p",null,"We will use ",Object(i.b)("em",{parentName:"p"},"curl")," to first execute the view on the HRHIS4 server. This\nis essentially a materialization process, and ensures that we have the\nmost recent data available through the SQL view when it is retrieved\nfrom the server. You can first look up the SQL view from the\napi/sqlViews resource, then POST using the following command:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},'curl "https://dev.hrhis.dhis2udsm.org/demo/api/sqlViews/dI68mLkP1wN/execute" -X POST -u admin:district\n')),Object(i.b)("p",null,"The next step in the process is the retrieval of the data.The basic\nstructure of the URL is as follows"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"http://{server}/api/sqlViews/{id}/data(.csv)\n")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"{server}")," parameter should be replaced with your own server. The\nnext part of the URL ",Object(i.b)("inlineCode",{parentName:"p"},"/api/sqlViews/")," should be appended with the\nspecific SQL view identifier. Append either ",Object(i.b)("inlineCode",{parentName:"p"},"data")," for XML data or\n",Object(i.b)("inlineCode",{parentName:"p"},"data.csv")," for comma delimited values. Support response formats are\njson, xml, csv, xls, html and html+css. As an example, the following\ncommand would retrieve XML data for the SQL view defined above."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},'curl "https://dev.hrhis.dhis2udsm.org/demo/api/sqlViews/dI68mLkP1wN/data.csv" -u admin:district\n')),Object(i.b)("p",null,"There are three types of SQL views:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"SQL view:")," Standard SQL views.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"Materialized SQL view:")," SQL views which are materialized, meaning\nwritten to disk. Needs to be updated to reflect changes in\nunderlying tables. Supports criteria to filter result set.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"SQL queries:")," Plain SQL queries. Support inline variables for\ncustomized queries."))),Object(i.b)("h3",{id:"criteria"},"Criteria"),Object(i.b)("p",null,"You can do simple filtering on the columns in the result set by\nappending ",Object(i.b)("em",{parentName:"p"},"criteria")," query parameters to the URL, using the column names\nand filter values separated by columns as parameter values, on the\nfollowing format:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/sqlViews/{id}/data?criteria=col1:value1&criteria=col2:value2\n")),Object(i.b)("p",null,"As an example, to filter the SQL view result set above to only return\norganisation units at level 4 you can use the following\nURL:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"https://dev.hrhis.dhis2udsm.org/demo/api/sqlViews/dI68mLkP1wN/data.csv?criteria=level:4\n")),Object(i.b)("h3",{id:"variables"},"Variables"),Object(i.b)("p",null,"SQL views support variable substitution. Variable substitution is only\navailable for SQL view of type ",Object(i.b)("em",{parentName:"p"},"query"),", meaning SQL views which are not\ncreated in the database but simply executed as regular SQL queries.\nVariables can be inserted directly into the SQL query and must be on\nthis format:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"${variable-key}\n")),Object(i.b)("p",null,"As an example, an SQL query that retrieves all data elements of a given\nvalue type where the value type is defined through a variable can look\nlike this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"select * from dataelement where valuetype = '${valueType}';\n")),Object(i.b)("p",null,"These variables can then be supplied as part of the URL when requested\nthrough the ",Object(i.b)("em",{parentName:"p"},"sqlViews")," Web API resource. Variables can be supplied on\nthe following format:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/sqlViews/{id}/data?var=key1:value1&var=key2:value2\n")),Object(i.b)("p",null,"An example query corresponding to the example above can look like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/sqlViews/dI68mLkP1wN/data.json?var=valueType:int\n")),Object(i.b)("p",null,"The ",Object(i.b)("em",{parentName:"p"},"valueType")," variable will be substituted with the ",Object(i.b)("em",{parentName:"p"},"int")," value, and\nthe query will return data elements with int value type."),Object(i.b)("p",null,"The variable parameter must contain alphanumeric characters only. The\nvariables must contain alphanumeric, dash, underscore and whitespace\ncharacters only."),Object(i.b)("p",null,"SQL Views of type ",Object(i.b)("em",{parentName:"p"},"query")," also support two system-defined variables that allow the query to access information about the user executing the view:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"variable"),Object(i.b)("th",{parentName:"tr",align:null},"means"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"${_current_user_id}"),Object(i.b)("td",{parentName:"tr",align:null},"the user's database id")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"${_current_username}"),Object(i.b)("td",{parentName:"tr",align:null},"the user's username")))),Object(i.b)("p",null,"Values for these variables cannot be supplied as part of the URL. They are always filled with information about the user."),Object(i.b)("p",null,"For example, the following SQL view of type ",Object(i.b)("em",{parentName:"p"},"query")," shows all the organisation units that are assigned to the user:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sql"},"    select ou.path, ou.name\n    from organisationunit ou_user\n    join organisationunit ou on ou.path like ou_user.path || '%'\n    join usermembership um on um.organisationunitid = ou_user.organisationunitid\n    where um.userinfoid = ${_current_user_id}\n    order by ou.path\n")),Object(i.b)("h3",{id:"filtering"},"Filtering"),Object(i.b)("p",null,"The SQL view api supports data filtering, equal to the ",Object(i.b)("a",{parentName:"p",href:"#webapi_metadata_object_filter"},"metadata object\nfilter"),". For a complete list of filter\noperators you can look at the documentation for ",Object(i.b)("a",{parentName:"p",href:"#webapi_metadata_object_filter"},"metadata object\nfilter"),"."),Object(i.b)("p",null,"To use filters, simply add them as parameters at the end of the request\nurl for your SQL view like\nthis:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/sqlViews/w3UxFykyHFy/data.json?filter=orgunit_level:eq:2&filter=orgunit_name:ilike:bo\n")),Object(i.b)("p",null,'This request will return a result including org units with "bo" in the\nname and which has org unit level 2.'),Object(i.b)("p",null,"The following example will return all org units with ",Object(i.b)("inlineCode",{parentName:"p"},"orgunit_level")," 2 or\n4:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/sqlViews/w3UxFykyHFy/data.json?filter=orgunit_level:in:[2,4]\n")),Object(i.b)("p",null,'And last, an example to return all org units that does not start with\n"Bo"'),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/sqlViews/w3UxFykyHFy/data.json?filter=orgunit_name:!like:Bo\n")),Object(i.b)("h2",{id:"dashboard"},"Dashboard"),Object(i.b)("p",null,"The dashboard is designed to give you an overview of multiple analytical\nitems like maps, charts, pivot tables and reports which together can\nprovide a comprehensive overview of your data. Dashboards are available\nin the Web API through the ",Object(i.b)("em",{parentName:"p"},"dashboards")," resource. A dashboard contains a\nlist of dashboard ",Object(i.b)("em",{parentName:"p"},"items"),". An item can represent a single resource, like\na chart, map or report table, or represent a list of links to analytical\nresources, like reports, resources, tabular reports and users. A\ndashboard item can contain up to eight links. Typically, a dashboard\nclient could choose to visualize the single-object items directly in a\nuser interface, while rendering the multi-object items as clickable\nlinks."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/dashboards\n")),Object(i.b)("h3",{id:"browsing-dashboards"},"Browsing dashboards"),Object(i.b)("p",null,"To get a list of your dashboards with basic information including\nidentifier, name and link in JSON format you can make a ",Object(i.b)("em",{parentName:"p"},"GET")," request to\nthe following URL:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/dashboards.json\n")),Object(i.b)("p",null,"The dashboards resource will provide a list of dashboards. Remember that\nthe dashboard object is shared so the list will be affected by the\ncurrently authenticated user. You can retrieve more information about a\nspecific dashboard by following its link, similar to this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/dashboards/vQFhmLJU5sK.json\n")),Object(i.b)("p",null,"A dashboard contains information like name and creation date and an\narray of dashboard items. The response in JSON format will look similar\nto this response (certain information has been removed for the sake of\nbrevity)."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "lastUpdated" : "2013-10-15T18:17:34.084+0000",\n  "id": "vQFhmLJU5sK",\n  "created": "2013-09-08T20:55:58.060+0000",\n  "name": "Mother and Child Health",\n  "href": "https://dev.hrhis.dhis2udsm.org/demo/api/dashboards/vQFhmLJU5sK",\n  "publicAccess": "--------",\n  "externalAccess": false,\n  "itemCount": 17,\n  "displayName": "Mother and Child Health",\n  "access": {\n    "update": true,\n    "externalize": true,\n    "delete": true,\n    "write": true,\n    "read": true,\n    "manage": true\n  },\n  "user": {\n    "id": "xE7jOejl9FI",\n    "name": "John Traore",\n    "created": "2013-04-18T15:15:08.407+0000",\n    "lastUpdated": "2014-12-05T03:50:04.148+0000",\n    "href": "https://dev.hrhis.dhis2udsm.org/demo/api/users/xE7jOejl9FI"\n  },\n  "dashboardItems": [{\n    "id": "bu1IAnPFa9H",\n    "created": "2013-09-09T12:12:58.095+0000",\n    "lastUpdated": "2013-09-09T12:12:58.095+0000"\n    }, {\n    "id": "ppFEJmWWDa1",\n    "created": "2013-09-10T13:57:02.480+0000",\n    "lastUpdated": "2013-09-10T13:57:02.480+0000"\n  }],\n  "userGroupAccesses": []\n}\n')),Object(i.b)("p",null,"A more tailored response can be obtained by specifying specific fields\nin the request. An example is provided below, which would return more\ndetailed information about each object on a users dashboard."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/dashboards/vQFhmLJU5sK/?fields=:all,dashboardItems[:all]\n")),Object(i.b)("h3",{id:"searching-dashboards"},"Searching dashboards"),Object(i.b)("p",null,"When a user is building a dashboard it is convenient\nto be able to search for various analytical resources using the\n",Object(i.b)("em",{parentName:"p"},"/dashboards/q")," resource. This resource lets you search for matches on\nthe name property of the following objects: charts, maps, report tables,\nusers, reports and resources. You can do a search by making a ",Object(i.b)("em",{parentName:"p"},"GET"),"\nrequest on the following resource URL pattern, where my-query should be\nreplaced by the preferred search query:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/dashboards/q/my-query.json\n")),Object(i.b)("p",null,"For example, this query:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/dashboards/q/ma?count=6&maxCount=20&max=CHART&max=MAP\n")),Object(i.b)("p",null,"Will search for the following:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},'Analytical object name contains the string "ma"'),Object(i.b)("li",{parentName:"ul"},"Return up to 6 of each type"),Object(i.b)("li",{parentName:"ul"},"For CHART and MAP types, return up to 20 items")),Object(i.b)("p",null,"JSON and XML response formats are supported. The response in JSON format\nwill contain references to matching resources and counts of how many\nmatches were found in total and for each type of resource. It will look\nsimilar to this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "charts": [{\n    "name": "ANC: 1-3 dropout rate Yearly",\n    "id": "LW0O27b7TdD"\n  }, {\n    "name": "ANC: 1 and 3 coverage Yearly",\n    "id": "UlfTKWZWV4u"\n  }, {\n    "name": "ANC: 1st and 3rd trends Monthly",\n    "id": "gnROK20DfAA"\n  }],\n  "visualizations": [{\n    "name": "ANC: ANC 3 Visits Cumulative Numbers",\n    "id": "arf9OiyV7df",\n    "type": "LINE"\n  }, {\n    "name": "ANC: 1st and 2rd trends Monthly",\n    "id": "jkf6OiyV7el",\n    "type": "PIVOT_TABLE"\n  }],\n  "maps": [{\n    "name": "ANC: 1st visit at facility (fixed) 2013",\n    "id": "YOEGBvxjAY0"\n  }, {\n    "name": "ANC: 3rd visit coverage 2014 by district",\n    "id": "ytkZY3ChM6J"\n  }],\n  "reportTables": [{\n    "name": "ANC: ANC 1 Visits Cumulative Numbers",\n    "id": "tWg9OiyV7mu"\n  }],\n  "reports": [{\n    "name": "ANC: 1st Visit Cumulative Chart",\n    "id": "Kvg1AhYHM8Q"\n  }, {\n    "name": "ANC: Coverages This Year",\n    "id": "qYVNH1wkZR0"\n  }],\n  "searchCount": 8,\n  "chartCount": 3,\n  "mapCount": 2,\n  "reportTableCount": 1,\n  "reportCount": 2,\n  "userCount": 0,\n  "patientTabularReportCount": 0,\n  "resourceCount": 0\n}\n')),Object(i.b)("h3",{id:"creating-updating-and-removing-dashboards"},"Creating, updating and removing dashboards"),Object(i.b)("p",null,"Creating, updating and deleting dashboards follow standard REST\nsemantics. In order to create a new dashboard you can make a ",Object(i.b)("em",{parentName:"p"},"POST"),"\nrequest to the ",Object(i.b)("inlineCode",{parentName:"p"},"/api/dashboards"),' resource. From a consumer perspective\nit might be convenient to first create a dashboard and later add items\nto it. JSON and XML formats are supported for the request payload. To\ncreate a dashboard with the name "My dashboard" you can use a payload in\nJSON like this:'),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'{\n  "name": "My dashboard"\n}\n')),Object(i.b)("p",null,"To update, e.g. rename, a dashboard, you can make a ",Object(i.b)("em",{parentName:"p"},"PUT")," request with a\nsimilar request payload the same api/dashboards resource."),Object(i.b)("p",null,"To remove a dashboard, you can make a ",Object(i.b)("em",{parentName:"p"},"DELETE")," request to the specific\ndashboard resource similar to this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/dashboards/vQFhmLJU5sK\n")),Object(i.b)("h3",{id:"adding-moving-and-removing-dashboard-items-and-content"},"Adding, moving and removing dashboard items and content"),Object(i.b)("p",null,"In order to add dashboard items a consumer can use the\n",Object(i.b)("inlineCode",{parentName:"p"},"/api/dashboards/<dashboard-id>/items/content")," resource, where\n\\<dashboard-id",">"," should be replaced by the relevant dashboard\nidentifier. The request must use the ",Object(i.b)("em",{parentName:"p"},"POST")," method. The URL syntax and\nparameters are described in detail in the following table."),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"POST")," request URL for adding a chart to a specific dashboard could\nlook like this, where the last id query parameter value is the chart\nresource\nidentifier:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/dashboards/vQFhmLJU5sK/items/content?type=chart&id=LW0O27b7TdD\n")),Object(i.b)("p",null,"When adding resource of type map, chart, report table and app, the API\nwill create and add a new item to the dashboard. When adding a resource\nof type users, reports, report tables and resources, the API will try to\nadd the resource to an existing dashboard item of the same type. If no\nitem of same type or no item of same type with less than eight resources\nassociated with it exists, the API will create a new dashboard item and\nadd the resource to it."),Object(i.b)("p",null,"In order to move a dashboard item to a new position within the list of\nitems in a dashboard, a consumer can make a ",Object(i.b)("em",{parentName:"p"},"POST")," request to the\nfollowing resource URL, where ",Object(i.b)("inlineCode",{parentName:"p"},"<dashboard-id>")," should be replaced by the\nidentifier of the dashboard, ",Object(i.b)("inlineCode",{parentName:"p"},"<item-id>")," should be replaced by the\nidentifier of the dashboard item and ",Object(i.b)("inlineCode",{parentName:"p"},"<index>")," should be replaced by the\nnew position of the item in the dashboard, where the index is\nzero-based:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/dashboards/<dashboard-id>/items/<item-id>/position/<index>\n")),Object(i.b)("p",null,"To remove a dashboard item completely from a specific dashboard a\nconsumer can make a ",Object(i.b)("em",{parentName:"p"},"DELETE")," request to the below resource URL, where\n",Object(i.b)("inlineCode",{parentName:"p"},"<dashboard-id>")," should be replaced by the identifier of the dashboard\nand ",Object(i.b)("inlineCode",{parentName:"p"},"<item-id>")," should be replaced by the identifier of the dashboard\nitem. The dashboard item identifiers can be retrieved through a GET\nrequest to the dashboard resource URL."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/dashboards/<dashboard-id>/items/<item-id>\n")),Object(i.b)("p",null,"To remove a specific content resource within a dashboard item a consumer\ncan make a ",Object(i.b)("em",{parentName:"p"},"DELETE")," request to the below resource URL, where\n",Object(i.b)("inlineCode",{parentName:"p"},"<content-resource-id>")," should be replaced by the identifier of a\nresource associated with the dashboard item; e.g. the identifier of a\nreport or a user. For instance, this can be used to remove a single\nreport from a dashboard item of type reports, as opposed to removing the\ndashboard item completely:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/dashboards/<dashboard-id>/items/<item-id>/content/<content-resource-id>\n")),Object(i.b)("h2",{id:"visualization"},"Visualization"),Object(i.b)("p",null,"The Visualization API is designed to help clients to interact with charts and pivot/report tables. The endpoints of this API are used by the Data Visualization application which allows the creation, configuration and management of charts and pivot tables based on the client's definitions. The main idea is to enable clients and users to have a unique and centralized API providing all types of charts and pivot tables as well as specific parameters and configuration for each type of visualization."),Object(i.b)("p",null,"This API was introduced with the expectation to unify both ",Object(i.b)("inlineCode",{parentName:"p"},"charts")," and ",Object(i.b)("inlineCode",{parentName:"p"},"reportTables")," APIs and entirely replace them in favour of the ",Object(i.b)("inlineCode",{parentName:"p"},"visualizations")," API (which means that the usage of ",Object(i.b)("inlineCode",{parentName:"p"},"charts")," and ",Object(i.b)("inlineCode",{parentName:"p"},"reportTables")," APIs should be avoided). In summary, the following resources/APIs:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/charts, /api/reportTables\n")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"are being replaced by")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"/api/visualizations\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("strong",{parentName:"p"},"Note")),Object(i.b)("p",{parentName:"blockquote"},"New applications and clients should avoid using the ",Object(i.b)("inlineCode",{parentName:"p"},"charts")," and ",Object(i.b)("inlineCode",{parentName:"p"},"reportTables")," APIs because they are deprecated. Use the ",Object(i.b)("inlineCode",{parentName:"p"},"visualizations")," API instead.")),Object(i.b)("p",null,"A Visualization object is composed of many attributes (some of them related to charts and others related to pivot tables), but the most important ones responsible to reflect the core information of the object are: ",Object(i.b)("em",{parentName:"p"},'"id", "name", "type", "dataDimensionItems", "columns", "rows" and "filters".')),Object(i.b)("p",null,"The root endpoint of the API is ",Object(i.b)("inlineCode",{parentName:"p"},"/api/visualizations"),", and the list of current attributes and elements are described in the table below."),Object(i.b)("h3",{id:"retrieving-visualizations"},"Retrieving visualizations"),Object(i.b)("p",null,"To retrieve a list of all existing visualizations, in JSON format, with some basic information (including identifier, name and pagination) you can make a ",Object(i.b)("inlineCode",{parentName:"p"},"GET")," request to the URL below. You should see a list of all public/shared visualizations plus your private ones."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"GET /api/visualizations.json\n")),Object(i.b)("p",null,"If you want to retrieve the JSON definition of a specific Visualization you can add its respective identifier to the URL:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"GET /api/visualizations/hQxZGXqnLS9.json\n")),Object(i.b)("p",null,"The following representation is an example of a response in JSON format (for brevity, certain information has been removed). For the complete schema, please use ",Object(i.b)("inlineCode",{parentName:"p"},"GET /api/schemas/visualization"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "lastUpdated": "2020-02-06T11:57:09.678",\n  "href": "http://my-domain/dhis/api/visualizations/hQxZGXqnLS9",\n  "id": "hQxZGXqnLS9",\n  "created": "2017-05-19T17:22:00.785",\n  "name": "ANC: ANC 1st visits last 12 months cumulative values",\n  "publicAccess": "rw------",\n  "userOrganisationUnitChildren": false,\n  "type": "LINE",\n  "access": {},\n  "reportingParams": {\n    "parentOrganisationUnit": false,\n    "reportingPeriod": false,\n    "organisationUnit": false,\n    "grandParentOrganisationUnit": false\n  },\n  "dataElementGroupSetDimensions": [],\n  "attributeDimensions": [],\n  "yearlySeries": [],\n  "filterDimensions": [\n    "dx"\n  ],\n  "columns": [\n    {\n      "id": "ou"\n    }\n  ],\n  "dataElementDimensions": [],\n  "categoryDimensions": [],\n  "rowDimensions": [\n    "pe"\n  ],\n  "columnDimensions": [\n    "ou"\n  ],\n  "dataDimensionItems": [\n    {\n      "dataDimensionItemType": "DATA_ELEMENT",\n      "dataElement": {\n        "id": "fbfJHSPpUQD"\n      }\n    }\n  ],\n  "filters": [\n    {\n      "id": "dx"\n    }\n  ],\n  "rows": [\n    {\n      "id": "pe"\n    }\n  ]\n}\n')),Object(i.b)("p",null,"A more tailored response can be obtained by specifying, in the URL, the fields you want to extract. Ie.:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"GET /api/visualizations/hQxZGXqnLS9.json?fields=interpretations\n")),Object(i.b)("p",null,"will return"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "interpretations": [\n    {\n      "id": "Lfr8I2RPU0C"\n    },\n    {\n      "id": "JuwgdJlJPGb"\n    },\n    {\n      "id": "WAoU2rSpyZp"\n    }\n  ]\n}\n')),Object(i.b)("p",null,"As seen, the ",Object(i.b)("inlineCode",{parentName:"p"},"GET")," above will return only the interpretations related to the given identifier (in this case ",Object(i.b)("inlineCode",{parentName:"p"},"hQxZGXqnLS9"),")."),Object(i.b)("h3",{id:"creating-updating-and-removing-visualizations"},"Creating, updating and removing visualizations"),Object(i.b)("p",null,"These operations follow the standard ",Object(i.b)("em",{parentName:"p"},"REST")," semantics. A new Visualization can be created through a ",Object(i.b)("inlineCode",{parentName:"p"},"POST")," request to the ",Object(i.b)("inlineCode",{parentName:"p"},"/api/visualizations")," resource with a valid JSON payload. An example of payload could be:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "columns": [\n    {\n      "dimension": "J5jldMd8OHv",\n      "items": [\n        {\n          "name": "CHP",\n          "id": "uYxK4wmcPqA",\n          "displayName": "CHP",\n          "displayShortName": "CHP",\n          "dimensionItemType": "ORGANISATION_UNIT_GROUP"\n        },\n        {\n          "name": "Hospital",\n          "id": "tDZVQ1WtwpA",\n          "displayName": "Hospital",\n          "displayShortName": "Hospital",\n          "dimensionItemType": "ORGANISATION_UNIT_GROUP"\n        }\n      ]\n    }\n  ],\n  "rows": [\n    {\n      "dimension": "SooXFOUnciJ",\n      "items": [\n        {\n          "name": "DOD",\n          "id": "B0bjKC0szQX",\n          "displayName": "DOD",\n          "displayShortName": "DOD",\n          "dimensionItemType": "CATEGORY_OPTION_GROUP"\n        },\n        {\n          "name": "CDC",\n          "id": "OK2Nr4wdfrZ",\n          "displayName": "CDC",\n          "displayShortName": "CDC",\n          "dimensionItemType": "CATEGORY_OPTION_GROUP"\n        }\n      ]\n    }\n  ],\n  "filters": [\n    {\n      "dimension": "ou",\n      "items": [\n        {\n          "name": "Sierra Leone",\n          "id": "ImspTQPwCqd",\n          "displayName": "Sierra Leone",\n          "displayShortName": "Sierra Leone",\n          "dimensionItemType": "ORGANISATION_UNIT"\n        },\n        {\n          "name": "LEVEL-1",\n          "id": "LEVEL-H1KlN4QIauv",\n          "displayName": "LEVEL-1"\n        }\n      ]\n    }\n  ],\n  "name": "HIV Cases Monthly",\n  "description": "Cases of HIV across the months",\n  "category": "XY1vwCQskjX",\n  "showDimensionLabels": true,\n  "hideEmptyRows": true,\n  "hideEmptyColumns": true,\n  "skipRounding": true,\n  "aggregationType": "SUM",\n  "regressionType": "LINEAR",\n  "type": "PIVOT_TABLE",\n  "numberType": "VALUE",\n  "measureCriteria": "Some criteria",\n  "showHierarchy": true,\n  "completedOnly": true,\n  "displayDensity": "NORMAL",\n  "fontSize": "NORMAL",\n  "digitGroupSeparator": "SPACE",\n  "legendDisplayStyle": "FILL",\n  "legendDisplayStrategy": "FIXED",\n  "hideEmptyRowItems": "BEFORE_FIRST_AFTER_LAST",\n  "regression": false,\n  "cumulative": true,\n  "sortOrder": 1,\n  "topLimit": 2,\n  "rowTotals": true,\n  "colTotals": true,\n  "hideTitle": true,\n  "hideSubtitle": true,\n  "hideLegend": true,\n  "showData": true,\n  "baseLineLabel": "A base label",\n  "targetLineLabel": "A target label",\n  "targetLineValue": 45.5,\n  "baseLineValue": 19.99,\n  "percentStackedValues": true,\n  "noSpaceBetweenColumns": true,\n  "rowSubTotals": true,\n  "colSubTotals": true,\n  "domainAxisLabel": "A domain axis label",\n  "rangeAxisLabel": "A range axis label",\n  "rangeAxisMaxValue": 123.65,\n  "rangeAxisMinValue": 33.89,\n  "rangeAxisSteps": 5,\n  "rangeAxisDecimals": 10,\n  "userOrgUnitType": "TEI_SEARCH",\n  "externalAccess": false,\n  "publicAccess": "--------",\n  "reportingParams": {\n    "reportingPeriod": true,\n    "organisationUnit": true,\n    "parentOrganisationUnit": true,\n    "grandParentOrganisationUnit": true\n  },\n  "parentGraphMap": {\n    "ImspTQPwCqd": ""\n  },\n  "access": {\n    "read": true,\n    "update": true,\n    "externalize": true,\n    "delete": false,\n    "write": true,\n    "manage": false\n  },\n  "optionalAxes": [\n    {\n      "dimensionalItem": "fbfJHSPpUQD",\n      "axis": 1\n    },\n    {\n      "dimensionalItem": "cYeuwXTCPkU",\n      "axis": 2\n    }\n  ],\n  "relativePeriods": {\n    "thisYear": false,\n    "quartersLastYear": true,\n    "last52Weeks": false,\n    "thisWeek": false,\n    "lastMonth": false,\n    "last14Days": false,\n    "biMonthsThisYear": false,\n    "monthsThisYear": false,\n    "last2SixMonths": false,\n    "yesterday": false,\n    "thisQuarter": false,\n    "last12Months": false,\n    "last5FinancialYears": false,\n    "thisSixMonth": false,\n    "lastQuarter": false,\n    "thisFinancialYear": false,\n    "last4Weeks": false,\n    "last3Months": false,\n    "thisDay": false,\n    "thisMonth": false,\n    "last5Years": false,\n    "last6BiMonths": false,\n    "last4BiWeeks": false,\n    "lastFinancialYear": false,\n    "lastBiWeek": false,\n    "weeksThisYear": false,\n    "last6Months": false,\n    "last3Days": false,\n    "quartersThisYear": false,\n    "monthsLastYear": false,\n    "lastWeek": false,\n    "last7Days": false,\n    "thisBimonth": false,\n    "lastBimonth": false,\n    "lastSixMonth": false,\n    "thisBiWeek": false,\n    "lastYear": false,\n    "last12Weeks": false,\n    "last4Quarters": false\n  },\n  "user": {},\n  "yearlySeries": [\n    "THIS_YEAR"\n  ],\n  "userGroupAccesses": [\n    {\n      "access": "rwx-----",\n      "userGroupUid": "ZoHNWQajIoe",\n      "displayName": "Bo District M&E officers",\n      "id": "ZoHNWQajIoe"\n    }\n  ],\n  "userAccesses": [\n    {\n      "access": "--------",\n      "displayName": "John Barnes",\n      "id": "DXyJmlo9rge",\n      "userUid": "DXyJmlo9rge"\n    }\n  ],\n  "legendSet": {\n    "name": "Death rate up",\n    "id": "ham2eIDJ9k6",\n    "legends": [\n      {\n        "startValue": 1,\n        "endValue": 2,\n        "color": "red",\n        "image": "some-image"\n      },\n      {\n        "startValue": 2,\n        "endValue": 3,\n        "color": "blue",\n        "image": "other-image"\n      }\n    ]\n  }\n}\n')),Object(i.b)("p",null,"To update a specific Visualization, you can send a ",Object(i.b)("inlineCode",{parentName:"p"},"PUT")," request to the same ",Object(i.b)("inlineCode",{parentName:"p"},"/api/visualizations")," resource with a similar payload ",Object(i.b)("inlineCode",{parentName:"p"},"PLUS")," the respective Visualization's identifier, ie.:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"PUT /api/visualizations/hQxZGXqnLS9\n")),Object(i.b)("p",null,"Finally, to delete an existing Visualization, you can make a ",Object(i.b)("inlineCode",{parentName:"p"},"DELETE")," request specifying the identifier of the Visualization to be removed, as shown:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"DELETE /api/visualizations/hQxZGXqnLS9\n")))}b.isMDXComponent=!0},93:function(e,a,n){"use strict";n.d(a,"a",(function(){return c})),n.d(a,"b",(function(){return m}));var t=n(0),r=n.n(t);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function s(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?s(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=r.a.createContext({}),b=function(e){var a=r.a.useContext(d),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},c=function(e){var a=b(e.components);return r.a.createElement(d.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},u=r.a.forwardRef((function(e,a){var n=e.components,t=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=b(n),u=t,m=c["".concat(s,".").concat(u)]||c[u]||p[u]||i;return n?r.a.createElement(m,o(o({ref:a},d),{},{components:n})):r.a.createElement(m,o({ref:a},d))}));function m(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=n.length,s=new Array(i);s[0]=u;var o={};for(var l in a)hasOwnProperty.call(a,l)&&(o[l]=a[l]);o.originalType=e,o.mdxType="string"==typeof e?e:t,s[1]=o;for(var d=2;d<i;d++)s[d]=n[d];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);