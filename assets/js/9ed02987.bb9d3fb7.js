"use strict";(self.webpackChunkhris_api_docs=self.webpackChunkhris_api_docs||[]).push([[499],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(t),m=a,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||s;return t?r.createElement(h,i(i({ref:n},p),{},{components:t})):r.createElement(h,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=c;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<s;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8016:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return c}});var r=t(7462),a=t(3366),s=(t(7294),t(3905)),i=["components"],o={id:"users",title:"Users",sidebar_label:"Users"},l=void 0,u={unversionedId:"developers/settings/users",id:"developers/settings/users",isDocsHomePage:!1,title:"Users",description:"User query",source:"@site/docs/developers/settings/users.md",sourceDirName:"developers/settings",slug:"/developers/settings/users",permalink:"/hris-api-docs/docs/developers/settings/users",editUrl:"https://github.com/udsm-dhis2-project/hris-api-docs/blob/main/docs/developers/settings/users.md",tags:[],version:"current",frontMatter:{id:"users",title:"Users",sidebar_label:"Users"},sidebar:"docs",previous:{title:"Records",permalink:"/hris-api-docs/docs/developers/data/record"},next:{title:"Settings",permalink:"/hris-api-docs/docs/developers/settings/settings"}},p=[{value:"User query",id:"user-query",children:[],level:3},{value:"User credentials query",id:"user-credentials-query",children:[],level:3},{value:"User account create and update",id:"user-account-create-and-update",children:[],level:3},{value:"User account invitations",id:"user-account-invitations",children:[],level:3},{value:"User replication",id:"user-replication",children:[],level:3},{value:"Current user information and associations",id:"current-user-information-and-associations",children:[],level:2}],d={toc:p};function c(e){var n=e.components,t=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"user-query"},"User query"),(0,s.kt)("p",null,"The ",(0,s.kt)("em",{parentName:"p"},"users")," resource offers additional query parameters beyond the\nstandard parameters (e.g. paging). To query for users at the users\nresource you can use the following parameters."),(0,s.kt)("p",null,'A query for max 10 users with "konan" as first name or surname (case\nin-sensitive) who have a subset of authorities compared to the current\nuser:'),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/users?query=konan&authSubset=true&pageSize=10\n")),(0,s.kt)("h3",{id:"user-credentials-query"},"User credentials query"),(0,s.kt)("p",null,"An alternative to the previous user query, is to directly query the user\ncredentials (the part where username, etc., resides) using\n",(0,s.kt)("em",{parentName:"p"},"/api/userCredentials")," endpoint, it supports all regular field and\nobject filters as the other endpoints."),(0,s.kt)("p",null,"Get user credentials where username is admin:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/userCredentials?filter=username:eq:admin\n")),(0,s.kt)("p",null,"Get username and code from all user credentials where username starts\nwith\n",(0,s.kt)("em",{parentName:"p"},"adm"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/userCredentials?fields=username,code&filter=username:^like:adm\n")),(0,s.kt)("h3",{id:"user-account-create-and-update"},"User account create and update"),(0,s.kt)("p",null,"Both creating and updating a user is supported through the API. The\npayload itself is similar to other payloads in the API, so they\nsupport collection references etc. A simple example payload to create\nwould be, the password should be sent in plain text (remember to only\nuse this on a SSL enabled server) and will be encrypted on the backend:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "Mj8balLULKp",\n  "firstName": "John",\n  "surname": "Doe",\n  "email": "johndoe@mail.com",\n  "userCredentials": {\n    "id": "lWCkJ4etppc",\n    "userInfo": {\n    "id": "Mj8balLULKp"\n  },\n  "username": "johndoe123",\n  "password": "Your-password-123",\n  "skype": "john.doe",\n  "telegram": "joh.doe",\n  "whatsApp": "+1-541-754-3010",\n  "facebookMessenger": "john.doe",\n  "avatar": {\n    "id": "<fileResource id>"\n  },\n  "userRoles": [\n    {\n      "id": "Ufph3mGRmMo"\n    }\n  ]\n  },\n  "organisationUnits": [\n    {\n      "id": "Rp268JB6Ne4"\n    }\n  ],\n  "userGroups": [\n    {\n      "id": "wl5cDMuUhmF"\n    }\n  ]\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST -d @u.json "http://server/api/users" -u user:pass \n  -H "Content-Type: application/json" \n')),(0,s.kt)("p",null,"In the user creation payload, user groups are only supported when importing\nor ",(0,s.kt)("em",{parentName:"p"},"POSTing")," a single user at a time. If you attempt to create more than one\nuser while specifiying user groups, you will not recieve an error and the\nusers will be created but no user groups will be assigned. This is by design\nand is limited because of the many-to-many relationship between Users and\nUser Groups whereby User Groups is the owner of the relationship. To update\nor create mulitple users and their user groups, consider a program to ",(0,s.kt)("em",{parentName:"p"},"POST"),"\none at a time, or ",(0,s.kt)("em",{parentName:"p"},"POST")," / import all users followed by another action to\nupdate their user groups while specifiying the new user's identifiers."),(0,s.kt)("p",null,"After the user is created, a ",(0,s.kt)("em",{parentName:"p"},"Location")," header is sent back with the\nnewly generated ID (you can also provide your own using /api/system/id\nendpoint). The same payload can then be used to do updates, but remember\nto then use ",(0,s.kt)("em",{parentName:"p"},"PUT")," instead of ",(0,s.kt)("em",{parentName:"p"},"POST")," and the endpoint is now\n",(0,s.kt)("em",{parentName:"p"},"/api/users/ID"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X PUT -d @u.json "http://server/api/users/ID" -u user:pass \n  -H "Content-Type: application/json" \n')),(0,s.kt)("p",null,"For more info about the full payload available, please see ",(0,s.kt)("inlineCode",{parentName:"p"},"/api/schemas/user"),"."),(0,s.kt)("p",null,"For more info about uploading and retrieving user avatars, please see the\n",(0,s.kt)("inlineCode",{parentName:"p"},"/fileResources")," endpoint."),(0,s.kt)("h3",{id:"user-account-invitations"},"User account invitations"),(0,s.kt)("p",null,"The Web API supports inviting people to create user accounts through the\n",(0,s.kt)("inlineCode",{parentName:"p"},"invite")," resource. To create an invitation you should POST a user in XML\nor JSON format to the invite resource. A specific username can be forced\nby defining the username in the posted entity. By omitting the username,\nthe person will be able to specify it herself. The system will send out\nan invitation through email. This requires that email settings have been\nproperly configured. The invite resource is useful in order to securely\nallow people to create accounts without anyone else knowing the password\nor by transferring the password in plain text. The payload to use for\nthe invite is the same as for creating users. An example payload in JSON\nlooks like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "firstName": "John",\n  "surname": "Doe",\n  "email": "johndoe@mail.com",\n  "userCredentials": {\n    "username": "johndoe",\n    "userRoles": [{\n      "id": "Euq3XfEIEbx"\n    }]\n  },\n  "organisationUnits": [ {\n    "id": "ImspTQPwCqd"\n  } ],\n  "userGroups": [ {\n    "id": "vAvEltyXGbD"\n  }]\n}\n')),(0,s.kt)("p",null,"The user invite entity can be posted like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -d @invite.json "localhost/api/users/invite" -u admin:district\n  -H "Content-Type:application/json" \n')),(0,s.kt)("p",null,"To send out invites for multiple users at the same time you must use a\nslightly different format. For JSON:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "users": [ {\n    "firstName": "John",\n    "surname": "Doe",\n    "email": "johndoe@mail.com",\n    "userCredentials": {\n      "username": "johndoe",\n      "userRoles": [ {\n        "id": "Euq3XfEIEbx"\n      } ]\n    },\n    "organisationUnits": [ {\n      "id": "ImspTQPwCqd"\n      } ]\n    }, {\n    "firstName": "Tom",\n    "surname": "Johnson",\n    "email": "tomj@mail.com",\n    "userCredentials": {\n      "userRoles": [ {\n        "id": "Euq3XfEIEbx"\n      } ]\n    },\n    "organisationUnits": [ {\n      "id": "ImspTQPwCqd"\n      } ]\n    }\n  ]\n}\n')),(0,s.kt)("p",null,"To create multiple invites you can post the payload to the\napi/users/invites resource like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -d @invites.json "localhost/api/users/invites" -u admin:district\n  -H "Content-Type:application/json"\n')),(0,s.kt)("p",null,"There are certain requirements for user account invitations to be sent\nout:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Email SMTP server must be configured properly on the server.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"The user to be invited must have specified a valid email.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"The user to be invited must not be granted user roles with critical\nauthorities (see below).")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"If username is specified it must not be already taken by another\nexisting user."))),(0,s.kt)("p",null,"If any of these requirements are not met the invite resource will return\nwith a ",(0,s.kt)("em",{parentName:"p"},"409 Conflict")," status code together with a descriptive message."),(0,s.kt)("p",null,"The critical authorities which cannot be granted with invites include:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"ALL")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Scheduling administration")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Set system settings")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Add, update, delete and list user roles")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Add, update, delete and view SQL views"))),(0,s.kt)("h3",{id:"user-replication"},"User replication"),(0,s.kt)("p",null,"To replicate a user you can use the ",(0,s.kt)("em",{parentName:"p"},"replica")," resource. Replicating a\nuser can be useful when debugging or reproducing issues reported by a\nparticular user. You need to provide a new username and password for the\nreplicated user which you will use to authenticate later. Note that you\nneed the ALL authority to perform this action. To replicate a user you\ncan post a JSON payload looking like below:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "username": "replica",\n  "password": "Replica.1234"\n}\n')),(0,s.kt)("p",null,"This payload can be posted to the replica resource, where you provide\nthe identifier of the user to replicate in the URL:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/users/<uid>/replica\n")),(0,s.kt)("p",null,"An example of replicating a user using curl looks like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -d @replica.json "localhost/api/users/N3PZBUlN8vq/replica"\n  -H "Content-Type:application/json" -u admin:district\n')),(0,s.kt)("h2",{id:"current-user-information-and-associations"},"Current user information and associations"),(0,s.kt)("p",null,"In order to get information about the currently authenticated user and\nits associations to other resources you can work with the ",(0,s.kt)("em",{parentName:"p"},"me")," resource\n(you can also refer to it by its old name ",(0,s.kt)("em",{parentName:"p"},"currentUser"),"). The current\nuser related resources gives your information which is useful when\nbuilding clients for instance for data entry and user management. The\nfollowing describes these resources and their purpose."),(0,s.kt)("p",null,"Provides basic information about the user that you are currently logged\nin as, including username, user credentials, assigned organisation\nunits:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/me\n")),(0,s.kt)("p",null,"Gives information about currently unread messages and interpretations:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/me/dashboard\n")),(0,s.kt)("p",null,"Lists all messages and interpretations in the inbox (including replies):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/me/inbox\n")),(0,s.kt)("p",null,"In order to change password, this end point can be used to validate\nnewly entered password. Password validation will be done based on\nPasswordValidationRules configured in the system. This end point support\nPOST and password string should be sent in POST body."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/me/validatePassword\n")),(0,s.kt)("p",null,"While changing password, this end point (support POST) can be used to\nverify old password. Password string should be sent in POST body."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/me/verifyPassword\n")),(0,s.kt)("p",null,"Gives the full profile information for current user. This endpoint\nsupport both ",(0,s.kt)("em",{parentName:"p"},"GET")," to retrieve profile and ",(0,s.kt)("em",{parentName:"p"},"POST")," to update profile (the\nexact same format is used):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/me/user-account\n")),(0,s.kt)("p",null,"Returns the set of authorities granted to the current user:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/me/authorization\n")),(0,s.kt)("p",null,"Returns true or false, indicating whether the current user has been\ngranted the given ",(0,s.kt)("inlineCode",{parentName:"p"},"<auth>")," authorization:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/me/authorization/<auth>\n")),(0,s.kt)("p",null,"Lists all organisation units directly assigned to the user:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/me/organisationUnits\n")),(0,s.kt)("p",null,"Gives all the datasets assigned to the users organisation units, and\ntheir direct children. This endpoint contains all required information\nto build a form based on one of our datasets. If you want all\ndescendants of your assigned organisation units, you can use the query\nparameter ",(0,s.kt)("em",{parentName:"p"},"includeDescendants=true")," :"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/me/dataSets\n")),(0,s.kt)("p",null,"Gives all the programs assigned to the users organisation units, and\ntheir direct children. This endpoint contains all required information\nto build a form based on one of our datasets. If you want all\ndescendants of your assigned organisation units, you can use the query\nparameter ",(0,s.kt)("em",{parentName:"p"},"includeDescendants=true")," :"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/me/programs\n")),(0,s.kt)("p",null,"Gives the data approval levels which are relevant to the current user:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"/api/me/dataApprovalLevels\n")))}c.isMDXComponent=!0}}]);